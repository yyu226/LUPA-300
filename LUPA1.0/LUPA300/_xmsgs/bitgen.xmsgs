<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Bitgen" num="341" delta="old" >This design is using one or more 9K Block RAMs (RAMB8BWER).  9K Block RAM initialization data, both user defined and default, requires a special bit stream format.  For more information, please reference Xilinx Answer Record 39999.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">LUPA300/REG_CONFIG/_n0103&lt;7&gt;</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">LUPA300/REG_CONFIG/_n0103&lt;4&gt;</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">LUPA300/REG_CONFIG/_n0103&lt;3&gt;</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">LUPA300/REG_CONFIG/_n0103&lt;6&gt;</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="372" delta="old" >Gated clock. Clock net <arg fmt="%s" index="1">LUPA300/REG_CONFIG/_n0103&lt;5&gt;</arg> is sourced by a combinatorial pin. This is not good design practice. Use the CE pin to control the loading of data into the flip-flop.
</msg>

<msg type="warning" file="PhysDesignRules" num="781" delta="old" ><arg fmt="%s" index="1">PULLUP</arg> on an active net. <arg fmt="%s" index="2">PULLUP</arg> of comp <arg fmt="%s" index="3">TMDS_POSITIVE&lt;0&gt;_PULLUP</arg> is set but the tri state is not configured. 
</msg>

<msg type="warning" file="PhysDesignRules" num="781" delta="old" ><arg fmt="%s" index="1">PULLUP</arg> on an active net. <arg fmt="%s" index="2">PULLUP</arg> of comp <arg fmt="%s" index="3">TMDS_POSITIVE&lt;1&gt;_PULLUP</arg> is set but the tri state is not configured. 
</msg>

<msg type="warning" file="PhysDesignRules" num="781" delta="old" ><arg fmt="%s" index="1">PULLUP</arg> on an active net. <arg fmt="%s" index="2">PULLUP</arg> of comp <arg fmt="%s" index="3">TMDS_POSITIVE&lt;2&gt;_PULLUP</arg> is set but the tri state is not configured. 
</msg>

<msg type="warning" file="PhysDesignRules" num="781" delta="old" ><arg fmt="%s" index="1">PULLUP</arg> on an active net. <arg fmt="%s" index="2">PULLUP</arg> of comp <arg fmt="%s" index="3">TMDS_CLOCK_P_PULLUP</arg> is set but the tri state is not configured. 
</msg>

<msg type="info" file="PhysDesignRules" num="1861" delta="old" >To achieve optimal frequency synthesis performance with the CLKFX and CLKFX180 outputs of the DCM comp <arg fmt="%s" index="1">ISCM/dcm_sp_inst</arg>, consult the device Data Sheet.
</msg>

<msg type="warning" file="PhysDesignRules" num="2410" delta="old" >This design is using one or more 9K Block RAMs (RAMB8BWER).  9K Block RAM initialization data, both user defined and default, may be incorrect and should not be used.  For more information, please reference Xilinx Answer Record 39999.
</msg>

<msg type="warning" file="PhysDesignRules" num="1863" delta="old" >Unexpected differential configuration for comp <arg fmt="%s" index="1">TMDS_POSITIVE&lt;0&gt;</arg>. The <arg fmt="%s" index="2">HDMI_PORT2/mBLUE/OBUFDS</arg> buffer is programmed as a true differential. Adding a pullup, pulldown, or keeper to a differential IO can create signal integrity problems and can violate specifications.
</msg>

<msg type="warning" file="PhysDesignRules" num="1863" delta="old" >Unexpected differential configuration for comp <arg fmt="%s" index="1">TMDS_POSITIVE&lt;1&gt;</arg>. The <arg fmt="%s" index="2">HDMI_PORT2/mGREEN/OBUFDS</arg> buffer is programmed as a true differential. Adding a pullup, pulldown, or keeper to a differential IO can create signal integrity problems and can violate specifications.
</msg>

<msg type="warning" file="PhysDesignRules" num="1863" delta="old" >Unexpected differential configuration for comp <arg fmt="%s" index="1">TMDS_POSITIVE&lt;2&gt;</arg>. The <arg fmt="%s" index="2">HDMI_PORT2/mRED/OBUFDS</arg> buffer is programmed as a true differential. Adding a pullup, pulldown, or keeper to a differential IO can create signal integrity problems and can violate specifications.
</msg>

<msg type="warning" file="PhysDesignRules" num="1863" delta="old" >Unexpected differential configuration for comp <arg fmt="%s" index="1">TMDS_CLOCK_P</arg>. The <arg fmt="%s" index="2">HDMI_PORT2/mCLOCK/OBUFDS</arg> buffer is programmed as a true differential. Adding a pullup, pulldown, or keeper to a differential IO can create signal integrity problems and can violate specifications.
</msg>

</messages>

